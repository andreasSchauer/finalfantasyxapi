// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: equipment.sql

package database

import (
	"context"
	"database/sql"
)

const createAutoAbility = `-- name: CreateAutoAbility :exec
INSERT INTO auto_abilities (data_hash, name, description, effect, type, category, ability_value, activation_condition, counter, gradual_recovery, on_hit_element, conversion_from, conversion_to)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13)
ON CONFLICT(data_hash) DO NOTHING
`

type CreateAutoAbilityParams struct {
	DataHash            string
	Name                string
	Description         sql.NullString
	Effect              string
	Type                EquipType
	Category            AutoAbilityCategory
	AbilityValue        sql.NullInt32
	ActivationCondition AaActivationCondition
	Counter             NullCounterType
	GradualRecovery     NullRecoveryType
	OnHitElement        NullElementType
	ConversionFrom      NullParameter
	ConversionTo        NullParameter
}

func (q *Queries) CreateAutoAbility(ctx context.Context, arg CreateAutoAbilityParams) error {
	_, err := q.db.ExecContext(ctx, createAutoAbility,
		arg.DataHash,
		arg.Name,
		arg.Description,
		arg.Effect,
		arg.Type,
		arg.Category,
		arg.AbilityValue,
		arg.ActivationCondition,
		arg.Counter,
		arg.GradualRecovery,
		arg.OnHitElement,
		arg.ConversionFrom,
		arg.ConversionTo,
	)
	return err
}

const createCelestialWeapon = `-- name: CreateCelestialWeapon :exec
INSERT INTO celestial_weapons (data_hash, name, key_item_base, formula)
VALUES ($1, $2, $3, $4)
ON CONFLICT(data_hash) DO NOTHING
`

type CreateCelestialWeaponParams struct {
	DataHash    string
	Name        string
	KeyItemBase KeyItemBase
	Formula     CelestialFormula
}

func (q *Queries) CreateCelestialWeapon(ctx context.Context, arg CreateCelestialWeaponParams) error {
	_, err := q.db.ExecContext(ctx, createCelestialWeapon,
		arg.DataHash,
		arg.Name,
		arg.KeyItemBase,
		arg.Formula,
	)
	return err
}
