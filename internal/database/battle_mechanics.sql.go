// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: battle_mechanics.sql

package database

import (
	"context"
	"database/sql"
)

const createStat = `-- name: CreateStat :one
INSERT INTO stats (data_hash, name, effect, min_val, max_val, max_val_2)
VALUES ($1, $2, $3, $4, $5, $6)
ON CONFLICT(data_hash) DO NOTHING
RETURNING id, data_hash, name, effect, min_val, max_val, max_val_2
`

type CreateStatParams struct {
	DataHash string
	Name     string
	Effect   string
	MinVal   int32
	MaxVal   int32
	MaxVal2  sql.NullInt32
}

func (q *Queries) CreateStat(ctx context.Context, arg CreateStatParams) (Stat, error) {
	row := q.db.QueryRowContext(ctx, createStat,
		arg.DataHash,
		arg.Name,
		arg.Effect,
		arg.MinVal,
		arg.MaxVal,
		arg.MaxVal2,
	)
	var i Stat
	err := row.Scan(
		&i.ID,
		&i.DataHash,
		&i.Name,
		&i.Effect,
		&i.MinVal,
		&i.MaxVal,
		&i.MaxVal2,
	)
	return i, err
}
